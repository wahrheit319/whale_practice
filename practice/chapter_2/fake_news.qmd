```{r}
# Load packages
library(bayesrules)
library(tidyverse)
library(dplyr)
library(janitor)
library(ggplot2)
```

```{r}
# Import article data
data(fake_news)
```

```{r}
# Row
fake_news %>% 
  tabyl(type) %>% 
  adorn_totals("row")
```

```{r}
# Row
fake_news %>% 
  tabyl(title_has_excl, type) %>% 
  adorn_totals("row")

```
```{r}
# Define possible articles
article <- data.frame(type = c("real", "fake"))

# Define the prior model
prior <- c(0.6, 0.4)
```

```{r}
# Simulate 3 articles
sample_n(article, size = 3, weight = prior, replace = TRUE)
```

```{r}
# Set the seed and simulate 3 articles
set.seed(84735)
sample_n(article, size = 3, weight = prior, replace = TRUE)
```

```{r}
# Simulate 10,000 articles
article_sim <- sample_n(article, size = 10000, weight = prior, replace = TRUE)
```

```{r}
# Plot
ggplot(article_sim, aes(x = type)) + 
  geom_bar()
```

```{r}
# Row
article_sim %>% 
  tabyl(type) %>% 
  adorn_totals("row")
```

```{r}
# Simulate
article_sim <- article_sim %>% 
  mutate(data_model = case_when(type == "fake" ~ 0.2667,
                                type == "real" ~ 0.0222))
glimpse(article_sim)
```

```{r}
# Simulate exclamation point usage
data <- c("no", "yes")
set.seed(3)
article_sim <- article_sim %>%
  group_by(1:n()) %>% 
  mutate(usage = sample(data, size = 1, prob = c(1 - data_model, data_model)))
```

```{r}
# Summarize
article_sim %>% 
  tabyl(usage, type) %>% 
  adorn_totals(c("col","row"))
```

```{r}
# Plot
ggplot(article_sim, aes(x = type, fill = usage)) + 
  geom_bar(position = "fill")
ggplot(article_sim, aes(x = type)) + 
  geom_bar()
```

```{r}
# Row
article_sim %>% 
  filter(usage == "yes") %>% 
  tabyl(type) %>% 
  adorn_totals("row")
```

```{r}
# Plot
ggplot(article_sim, aes(x = type)) + 
  geom_bar() + 
  facet_wrap(~ usage)
```
