```{r}
# Load packages
library(tidyverse)
library(janitor)
library(rstan)
library(bayesplot)
library(bayesrules)
```

```{r}
# a
# Step 1: Define a grid of specified mu values
grid_data <- data.frame(mu_grid = seq(from = 5, to = 15, by = 1))
```

```{r}
# Step 2: Evaluate the prior & likelihood at each mu
y_values <- c(7.1, 8.9, 8.4, 8.6)

grid_data <- grid_data |>
  mutate(prior = dnorm(mu_grid, 10, 1.2),
         likelihood = sapply(mu_grid, function(mu) prod(dnorm(y_values, mu, 1.3))))
```

```{r}
# Step 3: Approximate the posterior
grid_data <- grid_data |>
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))

round(grid_data, 2)

# Plot the grid approximated posterior
ggplot(grid_data, aes(x = mu_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = mu_grid, xend = mu_grid, y = 0, yend = posterior))
```

```{r}
# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)

# Histogram of the grid simulation with posterior pdf
ggplot(post_sample, aes(x = mu_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dnorm, args = list(mean(post_sample$mu_grid), sd(post_sample$mu_grid))) + 
  lims(x = c(5, 15))
```

```{r}
# b
# Step 1: Define a grid of 201 values
grid_data <- data.frame(mu_grid = seq(from = 5, to = 15, length = 201))

# Step 2: Evaluate the prior & likelihood at each mu
grid_data <- grid_data |>
  mutate(prior = dnorm(mu_grid, 10, 1.2),
         likelihood = sapply(mu_grid, function(mu) prod(dnorm(y_values, mu, 1.3))))

# Step 3: Approximate the posterior
grid_data <- grid_data |>
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))
```

```{r}
round(grid_data, 2)
```

```{r}
# Plot the grid approximated posterior
ggplot(grid_data, aes(x = mu_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = mu_grid, xend = mu_grid, y = 0, yend = posterior))

# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)

# Histogram of the grid simulation with posterior pdf
ggplot(post_sample, aes(x = mu_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dnorm, args = list(mean(post_sample$mu_grid), sd(post_sample$mu_grid))) + 
  lims(x = c(5, 15))

```

