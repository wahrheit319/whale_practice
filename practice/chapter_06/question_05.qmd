```{r}
# Load packages
library(tidyverse)
library(janitor)
library(rstan)
library(bayesplot)
library(bayesrules)
```

```{r}
# a
# Step 1: Define a grid of specified pi values
grid_data <- data.frame(pi_grid = seq(from = 0, to = 1, length = 5))

grid_data
```


```{r}
# Step 2: Evaluate the prior & likelihood at each pi
grid_data <- grid_data |>
  mutate(prior = dbeta(pi_grid, 3, 8),
         likelihood = dbinom(2, 10, pi_grid))
```

```{r}
# Step 3: Approximate the posterior
grid_data <- grid_data |>
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))
```

```{r}
round(grid_data, 2)
```

```{r}
# Plot the grid approximated posterior
ggplot(grid_data, aes(x = pi_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = pi_grid, xend = pi_grid, y = 0, yend = posterior))

```
```{r}
# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)
```

```{r}
# Histogram of the grid simulation with posterior pdf
ggplot(post_sample, aes(x = pi_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dbeta, args = list(5, 16)) + 
  lims(x = c(0, 1))
```

```{r}
# b
# Step 1: Define a grid of 201 values
grid_data <- data.frame(pi_grid = seq(from = 0, to = 1, length = 201))

# Step 2: Evaluate the prior & likelihood at each pi
grid_data <- grid_data |>
  mutate(prior = dbeta(pi_grid, 3, 8),
         likelihood = dbinom(2, 10, pi_grid))

# Step 3: Approximate the posterior
grid_data <- grid_data |>
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))

round(grid_data, 2)

# Plot the grid approximated posterior
ggplot(grid_data, aes(x = pi_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = pi_grid, xend = pi_grid, y = 0, yend = posterior))
```
```{r}
# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)
```

```{r}
# Histogram of the grid simulation with posterior pdf
ggplot(post_sample, aes(x = pi_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dbeta, args = list(5, 16)) + 
  lims(x = c(0, 1))
```

