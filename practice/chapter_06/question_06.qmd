```{r}
# Load packages
library(tidyverse)
library(janitor)
library(rstan)
library(bayesplot)
library(bayesrules)
library(ggformula)
```

```{r}
plot_gamma_poisson(s = 20, r = 5, sum_y = 1, n = 3, posterior = FALSE)
```

```{r}
# a
# Step 1: Define a grid of specified lambda values
grid_data <- data.frame(lambda_grid = seq(from = 0, to = 8, length = 9))

# Step 2: Evaluate the prior & likelihood at each lambda
grid_data <- grid_data |> 
  mutate(prior = dgamma(lambda_grid, 20, 5),
         likelihood = dpois(0, lambda_grid) * dpois(1, lambda_grid) * dpois(0, lambda_grid))

# Step 3: Approximate the posterior
grid_data <- grid_data |> 
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))

# Plot the grid approximated posterior
ggplot(grid_data, aes(x = lambda_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = lambda_grid, xend = lambda_grid, y = 0, yend = posterior))
```


```{r}
# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)
```

```{r}
# Histogram of the grid simulation with posterior pdf 
ggplot(post_sample, aes(x = lambda_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dgamma, args = list(21, 8)) + 
  lims(x = c(0, 8))
```

```{r}
# b
# Step 1: Define a grid of specified lambda values
grid_data <- data.frame(lambda_grid = seq(from = 0, to = 8, length = 201))

# Step 2: Evaluate the prior & likelihood at each lambda
grid_data <- grid_data |> 
  mutate(prior = dgamma(lambda_grid, 20, 5),
         likelihood = dpois(0, lambda_grid) * dpois(1, lambda_grid) * dpois(0, lambda_grid))

# Step 3: Approximate the posterior
grid_data <- grid_data |> 
  mutate(unnormalized = likelihood * prior,
         posterior = unnormalized / sum(unnormalized))

# Set the seed
set.seed(84735)

# Step 4: sample from the discretized posterior
post_sample <- sample_n(grid_data, size = 10000, 
                        weight = posterior, replace = TRUE)
```

```{r}
# Plot the grid approximated posterior
ggplot(grid_data, aes(x = lambda_grid, y = posterior)) + 
  geom_point() + 
  geom_segment(aes(x = lambda_grid, xend = lambda_grid, y = 0, yend = posterior))
```

```{r}
# Histogram of the grid simulation with posterior pdf 
ggplot(post_sample, aes(x = lambda_grid)) + 
  geom_histogram(aes(y = ..density..), color = "white") + 
  stat_function(fun = dgamma, args = list(21, 8)) + 
  lims(x = c(0, 8))
```


```{r}
gf_dist("gamma", shape = 20, rate = 5, color = "red") |> # prior
  gf_dist("gamma", shape = 1 + 1, rate = 3, color = "green") |> # likelihood
  gf_dist("gamma", shape = 20 + 1, rate = 5 + 3, color = "blue")  # posterior
```

```{r}
plot_gamma_poisson(shape = 20, rate = 5, sum_y = 1, n = 3)
```

